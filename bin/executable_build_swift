#!/bin/bash

set -euo pipefail

cd ~/projects/swift/swift

mkdir -p ../build

flag="_"
if [[ "$#" > 1 ]]; then
flag="${1}"
shift
fi

if [[ "${flag}" == "-d" ]]; then
  echo "[BUILD-SWIFT]: Debug (both C++ and Swift) build"
  ln -nfs Ninja-RelWithDebInfoAssert+swift-DebugAssert ../build/current

  ./utils/build-script \
    --release-debuginfo \
    --debug-swift \
    --force-optimized-typechecker \
    --extra-cmake-options="-DCMAKE_CXX_FLAGS=-fno-limit-debug-info,-DCMAKE_C_FLAGS=-fno-limit-debug-info" \
    --cmake-c-launcher $(which ccache) \
    --cmake-cxx-launcher $(which ccache) \
    $@
    --cmake-cxx-launcher $(which ccache)
elif [[ "${1-}" == "-do" ]]; then
  echo "[BUILD-SWIFT]: Debug-C++ build"
  ln -nfs Ninja-RelWithDebInfoAssert ../build/current

  ./utils/build-script \
    --release-debuginfo \
    --force-optimized-typechecker \
    --extra-cmake-options="-DCMAKE_CXX_FLAGS=-fno-limit-debug-info,-DCMAKE_C_FLAGS=-fno-limit-debug-info" \
    --cmake-c-launcher $(which ccache) \
    --cmake-cxx-launcher $(which ccache)
elif [[ "${1-}" == "-o" ]]; then
  echo "[BUILD-SWIFT]: Optimized no-assertions build"
  ln -nfs Ninja-Release ../build/current

  ./utils/build-script \
    --release \
    -R \
    --no-assertions \
    --cmake-c-launcher $(which ccache) \
    --cmake-cxx-launcher $(which ccache) \
    $@
else
  echo "[BUILD-SWIFT]: Optimized build"
  ln -nfs Ninja-ReleaseAssert+stdlib-Release ../build/current

  ./utils/build-script \
    --release \
    --no-swift-stdlib-assertions \
    --llbuild \
    --cmake-c-launcher $(which ccache) \
    --cmake-cxx-launcher $(which ccache) \
    $@
fi
